{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 127, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/QuocDat/OneDrive/Desktop/first-project/db/prisma.ts"],"sourcesContent":["import { Pool, neonConfig } from '@neondatabase/serverless';\nimport { PrismaNeon } from '@prisma/adapter-neon';\nimport { PrismaClient } from '@prisma/client';\nimport ws from 'ws';\n\n// Sets up WebSocket connections for Neon\nneonConfig.webSocketConstructor = ws;\nconst connectionString = `${process.env.DATABASE_URL}`;\n\n// Creates a connection pool\nconst pool = new Pool({ connectionString });\n\n// Instantiates the Prisma adapter\nconst adapter = new PrismaNeon(pool);\n\n// Extends PrismaClient with custom transformations\nexport const prisma = new PrismaClient({ adapter }).$extends({\n  result: {\n    product: {\n      price: {\n        compute(product) {\n          return product.price.toString();\n        },\n      },\n      rating: {\n        compute(product) {\n          return product.rating.toString();\n        },\n      },\n    },\n  },\n});\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;;;;;AAEA,yCAAyC;AACzC,iNAAU,CAAC,oBAAoB,GAAG,sMAAE;AACpC,MAAM,mBAAmB,GAAG,QAAQ,GAAG,CAAC,YAAY,EAAE;AAEtD,4BAA4B;AAC5B,MAAM,OAAO,IAAI,2MAAI,CAAC;IAAE;AAAiB;AAEzC,kCAAkC;AAClC,MAAM,UAAU,IAAI,wNAAU,CAAC;AAGxB,MAAM,SAAS,IAAI,6IAAY,CAAC;IAAE;AAAQ,GAAG,QAAQ,CAAC;IAC3D,QAAQ;QACN,SAAS;YACP,OAAO;gBACL,SAAQ,OAAO;oBACb,OAAO,QAAQ,KAAK,CAAC,QAAQ;gBAC/B;YACF;YACA,QAAQ;gBACN,SAAQ,OAAO;oBACb,OAAO,QAAQ,MAAM,CAAC,QAAQ;gBAChC;YACF;QACF;IACF;AACF","debugId":null}},
    {"offset": {"line": 170, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/QuocDat/OneDrive/Desktop/first-project/lib/auth.ts"],"sourcesContent":["import { betterAuth } from \"better-auth\";\nimport { prismaAdapter } from \"better-auth/adapters/prisma\";\nimport { prisma } from \"@/db/prisma\";\n\nexport const auth = betterAuth({\n  database: prismaAdapter(prisma, {\n    provider: \"postgresql\",\n  }),\n  emailAndPassword: {\n    enabled: true,\n    requireEmailVerification: false,\n  },\n  socialProviders: {\n    // You can add social providers here later\n  },\n  session: {\n    expiresIn: 60 * 60 * 24 * 7, // 7 days\n    updateAge: 60 * 60 * 24, // 1 day\n  },\n  user: {\n    additionalFields: {\n      role: {\n        type: \"string\",\n        defaultValue: \"user\",\n        required: false,\n      },\n      address: {\n        type: \"json\",\n        required: false,\n      },\n      paymentMethod: {\n        type: \"string\",\n        required: false,\n      },\n    },\n  },\n  plugins: [],\n  secret: process.env.BETTER_AUTH_SECRET!,\n  baseURL: process.env.BETTER_AUTH_URL || \"http://localhost:3000\",\n});\n\nexport type Session = typeof auth.$Infer.Session;\n"],"names":[],"mappings":";;;;AAAA;AAAA;AACA;AACA;;;;AAEO,MAAM,OAAO,IAAA,gRAAU,EAAC;IAC7B,UAAU,IAAA,+OAAa,EAAC,mKAAM,EAAE;QAC9B,UAAU;IACZ;IACA,kBAAkB;QAChB,SAAS;QACT,0BAA0B;IAC5B;IACA,iBAAiB;IAEjB;IACA,SAAS;QACP,WAAW,KAAK,KAAK,KAAK;QAC1B,WAAW,KAAK,KAAK;IACvB;IACA,MAAM;QACJ,kBAAkB;YAChB,MAAM;gBACJ,MAAM;gBACN,cAAc;gBACd,UAAU;YACZ;YACA,SAAS;gBACP,MAAM;gBACN,UAAU;YACZ;YACA,eAAe;gBACb,MAAM;gBACN,UAAU;YACZ;QACF;IACF;IACA,SAAS,EAAE;IACX,QAAQ,QAAQ,GAAG,CAAC,kBAAkB;IACtC,SAAS,QAAQ,GAAG,CAAC,eAAe,IAAI;AAC1C","debugId":null}},
    {"offset": {"line": 220, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/QuocDat/OneDrive/Desktop/first-project/app/api/auth/%5B...all%5D/route.ts"],"sourcesContent":["import { auth } from \"@/lib/auth\";\n\nexport const { GET, POST } = auth.handler;"],"names":[],"mappings":";;;;;;AAAA;;AAEO,MAAM,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,gKAAI,CAAC,OAAO","debugId":null}}]
}