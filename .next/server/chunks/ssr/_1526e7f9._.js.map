{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":["file:///Users/nhungbui/Desktop/first-project/lib/actions/cart.actions.ts"],"sourcesContent":["// 'use server';\n\n// import { auth } from '@/auth';\n// import { cookies } from 'next/headers';\n// import { z } from 'zod';\n// import { formatError } from '../utils';\n// import { cartItemSchema, insertCartSchema } from '../validators';\n// // import { prisma } from '@/db/prisma';\n// import { CartItem } from '@/types';\n// import { Prisma } from '@prisma/client';\n// import { convertToPlainObject } from '../utils';\n\n// export const addItemToCart = async (data: z.infer<typeof cartItemSchema>) => {\n//       try {\n//         // Check for session cart cookie\n//         const sessionCartId = (await cookies()).get('sessionCartId')?.value;\n//         if (!sessionCartId) throw new Error('Cart Session not found');\n//         // Get session and user ID\n//         const session = await auth();\n//         const userId = session?.user.id as string | undefined;\n//         // Get cart from database\n//         const cart = await getMyCart();\n//         // Parse and validate submitted item data\n//         const item = cartItemSchema.parse(data);\n//         // Find product in database\n//         //TODO\n//         const product = {}\n//       //   const product = await prisma.product.findFirst({\n//       //     where: { id: item.productId },\n//       //   });\n//         if (!product) throw new Error('Product not found');\n    \n//         // Testing\n//         console.log({\n//           'Session Cart ID': sessionCartId,\n//           'User ID': userId,\n//           'Item Requested': item,\n//           'Product Found': product,\n//           cart: cart,\n//         });\n    \n//         return {\n//           success: true,\n//           message: 'Testing Cart',\n//         };\n//       } catch (error) {\n//         return { success: false, message: formatError(error) };\n//       }\n//     };\n    \n//     //  Get user cart from database\n//     export async function getMyCart() {\n//       // Check for session cart cookie\n//       const sessionCartId = (await cookies()).get('sessionCartId')?.value;\n//       if (!sessionCartId) return undefined;\n    \n//       // Get session and user ID\n//       const session = await auth();\n//       const userId = session?.user.id;\n    \n//       // Get user cart from database\n      \n//       const cart = {}\n//       // const cart = await prisma.cart.findFirst({\n//       //   where: userId ? { userId: userId } : { sessionCartId: sessionCartId },\n//       // });\n    \n//       if (!cart) return undefined;\n    \n//       // Convert Decimal values to strings for compatibility with AddToCart component\n//       return convertToPlainObject({\n//         ...cart,\n//         items: cart.items as CartItem[],\n//         itemsPrice: cart.itemsPrice.toString(),\n//         totalPrice: cart.totalPrice.toString(),\n//         shippingPrice: cart.shippingPrice.toString(),\n//         taxPrice: cart.taxPrice.toString(),\n//       });\n//     }"],"names":[],"mappings":"AAAA,gBAAgB;AAEhB,iCAAiC;AACjC,0CAA0C;AAC1C,2BAA2B;AAC3B,0CAA0C;AAC1C,oEAAoE;AACpE,2CAA2C;AAC3C,sCAAsC;AACtC,2CAA2C;AAC3C,mDAAmD;AAEnD,iFAAiF;AACjF,cAAc;AACd,2CAA2C;AAC3C,+EAA+E;AAC/E,yEAAyE;AACzE,qCAAqC;AACrC,wCAAwC;AACxC,iEAAiE;AACjE,oCAAoC;AACpC,0CAA0C;AAC1C,oDAAoD;AACpD,mDAAmD;AACnD,sCAAsC;AACtC,iBAAiB;AACjB,6BAA6B;AAC7B,8DAA8D;AAC9D,8CAA8C;AAC9C,iBAAiB;AACjB,8DAA8D;AAE9D,qBAAqB;AACrB,wBAAwB;AACxB,8CAA8C;AAC9C,+BAA+B;AAC/B,oCAAoC;AACpC,sCAAsC;AACtC,wBAAwB;AACxB,cAAc;AAEd,mBAAmB;AACnB,2BAA2B;AAC3B,qCAAqC;AACrC,aAAa;AACb,0BAA0B;AAC1B,kEAAkE;AAClE,UAAU;AACV,SAAS;AAET,sCAAsC;AACtC,0CAA0C;AAC1C,yCAAyC;AACzC,6EAA6E;AAC7E,8CAA8C;AAE9C,mCAAmC;AACnC,sCAAsC;AACtC,yCAAyC;AAEzC,uCAAuC;AAEvC,wBAAwB;AACxB,sDAAsD;AACtD,oFAAoF;AACpF,eAAe;AAEf,qCAAqC;AAErC,wFAAwF;AACxF,sCAAsC;AACtC,mBAAmB;AACnB,2CAA2C;AAC3C,kDAAkD;AAClD,kDAAkD;AAClD,wDAAwD;AACxD,8CAA8C;AAC9C,YAAY;AACZ,QAAQ","debugId":null}},
    {"offset": {"line": 76, "column": 0}, "map": {"version":3,"sources":["file:///Users/nhungbui/Desktop/first-project/components/shared/product/add-to-cart.tsx"],"sourcesContent":["'use client';\n\nimport { CartItem } from '@/types';\nimport { toast } from \"sonner\";\nimport { Button } from '@/components/ui/button';\nimport { Plus } from 'lucide-react';\nimport { useRouter } from 'next/navigation';\nimport { addItemToCart } from '@/lib/actions/cart.actions';\n\n\n\nconst AddToCart = ({ item }: { item: Omit<CartItem, 'cartId'> }) => {\n      const router = useRouter();\n      const handleAddToCart = async () => {\n            const res = await addItemToCart(item);\n            if (!res.success) {\n              toast.error(res.message);\n              return;\n            }\n          \n            toast(`${item.name} added to the cart`, {\n              action: {\n                label: 'Go to cart',\n                onClick: () => router.push('/cart'),\n              },\n            });\n          };\n\n//   return <Button className='w-full' type='button' onClick={handleAddToCart}>\n//   <Plus />\n//   Add to cart\n// </Button>\nreturn <div onClick={handleAddToCart}>Add to cart</div>\n};\n\nexport default AddToCart;"],"names":[],"mappings":";;;;;AAGA;AAGA;AACA;AAPA;;;;;AAWA,MAAM,YAAY,CAAC,EAAE,IAAI,EAAsC;IACzD,MAAM,SAAS,IAAA,+IAAS;IACxB,MAAM,kBAAkB;QAClB,MAAM,MAAM,MAAM,IAAA,kJAAa,EAAC;QAChC,IAAI,CAAC,IAAI,OAAO,EAAE;YAChB,iJAAK,CAAC,KAAK,CAAC,IAAI,OAAO;YACvB;QACF;QAEA,IAAA,iJAAK,EAAC,GAAG,KAAK,IAAI,CAAC,kBAAkB,CAAC,EAAE;YACtC,QAAQ;gBACN,OAAO;gBACP,SAAS,IAAM,OAAO,IAAI,CAAC;YAC7B;QACF;IACF;IAEV,+EAA+E;IAC/E,aAAa;IACb,gBAAgB;IAChB,YAAY;IACZ,qBAAO,8OAAC;QAAI,SAAS;kBAAiB;;;;;;AACtC;uCAEe","debugId":null}},
    {"offset": {"line": 121, "column": 0}, "map": {"version":3,"sources":["file:///Users/nhungbui/Desktop/first-project/node_modules/next/navigation.js"],"sourcesContent":["module.exports = require('./dist/client/components/navigation')\n"],"names":[],"mappings":"AAAA,OAAO,OAAO","ignoreList":[0],"debugId":null}}]
}