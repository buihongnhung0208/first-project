{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/nhungbui/Desktop/first-project/lib/validators.ts"],"sourcesContent":["import { z } from 'zod';\n\nexport const insertProductSchema = z.object({\n      name: z.string().min(3, 'Name must be at least 3 characters'),\n      slug: z.string().min(3, 'Slug must be at least 3 characters'),\n      category: z.string().min(3, 'Category must be at least 3 characters'),\n      brand: z.string().min(3, 'Brand must be at least 3 characters'),\n      description: z.string().min(3, 'Description must be at least 3 characters'),\n      stock: z.coerce.number(),\n      images: z.array(z.string()).min(1, 'Product must have at least one image'),\n      isFeatured: z.boolean(),\n      banner: z.string().nullable(),\n});\n\nexport function formatNumberWithDecimal(num: number): string {\n      const [int, decimal] = num.toString().split('.');\n      return decimal ? `${int}.${decimal.padEnd(2, '0')}` : `${int}.00`;\n}\n\nconst currency = z\n      .string()\n      .refine(\n            (value) => /^\\d+(\\.\\d{2})?$/.test(formatNumberWithDecimal(Number(value))),\n            'Price must have exactly two decimal places (e.g., 49.99)'\n      );\n\nexport const cartItemSchema = z.object({\n      productId: z.string().min(1, 'Product is required'),\n      name: z.string().min(1, 'Name is required'),\n      slug: z.string().min(1, 'Slug is required'),\n      qty: z.coerce\n            .number()\n            .int()\n            .nonnegative('Quantity must be a non-negative number'),\n      image: z.string().min(1, 'Image is required'),\n      price: z.coerce\n            .number()\n            .refine(\n                  (value) => /^\\d+(\\.\\d{2})?$/.test(Number(value).toFixed(2)),\n                  'Price must have exactly two decimal places (e.g., 49.99)'\n            ),\n});\n\nexport const insertCartSchema = z.object({\n      items: z.array(cartItemSchema),\n      itemsPrice: currency,\n      totalPrice: currency,\n      shippingPrice: currency,\n      taxPrice: currency,\n      sessionCartId: z.string().min(1, 'Session cart id is required'),\n      userId: z.string().optional().nullable(),\n});\n\n// Looser schema for client input when adding to cart\nexport const addToCartInputSchema = z\n      .object({\n            productId: z.string().optional(),\n            slug: z.string().optional(),\n            name: z.string().optional(),\n            image: z.string().optional(),\n            price: z.coerce.number().optional(),\n            qty: z.coerce.number().default(1),\n      })\n      .refine((data) => Boolean(data.productId || data.slug), {\n            message: 'Product identifier is required',\n            path: ['productId'],\n      });\n\nexport const shippingAddressSchema = z.object({\n      fullName: z.string().min(3, 'Name must be at least 3 characters'),\n      streetAddress: z.string().min(3, 'Address must be at least 3 characters'),\n      city: z.string().min(3, 'city must be at least 3 characters'),\n      postalCode: z.string().min(3, 'Postal code must be at least 3 characters'),\n      country: z.string().min(3, 'Country must be at least 3 characters'),\n      lat: z.number().optional(),\n      lng: z.number().optional(),\n});"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 79, "column": 0}, "map": {"version":3,"sources":["file:///Users/nhungbui/Desktop/first-project/lib/constants/index.ts"],"sourcesContent":["export const APP_NAME = process.env.NEXT_PUBLIC_APP_NAME || 'Prostore';\nexport const APP_DESCRIPTION =\n  process.env.NEXT_PUBLIC_APP_DESCRIPTION || 'A modern store built with Next.js';\nexport const SERVER_URL = process.env.NEXT_PUBLIC_SERVER_URL || 'http://localhost:3000';\nexport const LATEST_PRODUCTS_LIMIT =\n  Number(process.env.LATEST_PRODUCTS_LIMIT) || 4;\n\nexport const signInDefaultValues = {\n  email: '',\n  password: '',\n};\n\nexport const signUpDefaultValues = {\n  name: 'Steve Smith',\n  email: 'steve@example.com',\n  password: 'password',\n  confirmPassword: 'password',\n};\n\nexport const shippingAddressDefaultValues = {\n  fullName: 'John Doe',\n  streetAddress: '123 Main St',\n  city: 'Anytown',\n  postalCode: '12345',\n  country: 'USA',\n};"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAAO,MAAM,WAAW,qDAAoC;AACrD,MAAM,kBACX,kHAA2C;AACtC,MAAM,aAAa,6DAAsC;AACzD,MAAM,wBACX,OAAO,QAAQ,GAAG,CAAC,qBAAqB,KAAK;AAExC,MAAM,sBAAsB;IACjC,OAAO;IACP,UAAU;AACZ;AAEO,MAAM,sBAAsB;IACjC,MAAM;IACN,OAAO;IACP,UAAU;IACV,iBAAiB;AACnB;AAEO,MAAM,+BAA+B;IAC1C,UAAU;IACV,eAAe;IACf,MAAM;IACN,YAAY;IACZ,SAAS;AACX","debugId":null}},
    {"offset": {"line": 120, "column": 0}, "map": {"version":3,"sources":["file:///Users/nhungbui/Desktop/first-project/hooks/use-toast.ts"],"sourcesContent":["\"use client\";\n\nimport { toast as sonnerToast } from \"sonner\";\n\nexport function useToast() {\n  return { toast: sonnerToast };\n}\n\n\n"],"names":[],"mappings":";;;;AAEA;AAFA;;AAIO,SAAS;IACd,OAAO;QAAE,OAAO,iJAAW;IAAC;AAC9B","debugId":null}},
    {"offset": {"line": 136, "column": 0}, "map": {"version":3,"sources":["file:///Users/nhungbui/Desktop/first-project/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Label({\n  className,\n  ...props\n}: React.ComponentProps<typeof LabelPrimitive.Root>) {\n  return (\n    <LabelPrimitive.Root\n      data-slot=\"label\"\n      className={cn(\n        \"flex items-center gap-2 text-sm leading-none font-medium select-none group-data-[disabled=true]:pointer-events-none group-data-[disabled=true]:opacity-50 peer-disabled:cursor-not-allowed peer-disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Label }\n"],"names":[],"mappings":";;;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,MAAM,EACb,SAAS,EACT,GAAG,OAC8C;IACjD,qBACE,8OAAC,yKAAmB;QAClB,aAAU;QACV,WAAW,IAAA,kHAAE,EACX,uNACA;QAED,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 163, "column": 0}, "map": {"version":3,"sources":["file:///Users/nhungbui/Desktop/first-project/components/ui/form.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  useFormState,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>,\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>,\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState } = useFormContext()\n  const formState = useFormState({ name: fieldContext.name })\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nfunction FormItem({ className, ...props }: React.ComponentProps<\"div\">) {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div\n        data-slot=\"form-item\"\n        className={cn(\"grid gap-2\", className)}\n        {...props}\n      />\n    </FormItemContext.Provider>\n  )\n}\n\nfunction FormLabel({\n  className,\n  ...props\n}: React.ComponentProps<typeof LabelPrimitive.Root>) {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      data-slot=\"form-label\"\n      data-error={!!error}\n      className={cn(\"data-[error=true]:text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n}\n\nfunction FormControl({ ...props }: React.ComponentProps<typeof Slot>) {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      data-slot=\"form-control\"\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n}\n\nfunction FormDescription({ className, ...props }: React.ComponentProps<\"p\">) {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      data-slot=\"form-description\"\n      id={formDescriptionId}\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction FormMessage({ className, ...props }: React.ComponentProps<\"p\">) {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : props.children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      data-slot=\"form-message\"\n      id={formMessageId}\n      className={cn(\"text-destructive text-sm\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n}\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAEA;AAEA;AACA;AAUA;AACA;AAhBA;;;;;;;AAkBA,MAAM,OAAO,8KAAY;AASzB,MAAM,iCAAmB,sNAAmB,CAC1C,CAAC;AAGH,MAAM,YAAY,CAGhB,EACA,GAAG,OACkC;IACrC,qBACE,8OAAC,iBAAiB,QAAQ;QAAC,OAAO;YAAE,MAAM,MAAM,IAAI;QAAC;kBACnD,cAAA,8OAAC,4KAAU;YAAE,GAAG,KAAK;;;;;;;;;;;AAG3B;AAEA,MAAM,eAAe;IACnB,MAAM,eAAe,mNAAgB,CAAC;IACtC,MAAM,cAAc,mNAAgB,CAAC;IACrC,MAAM,EAAE,aAAa,EAAE,GAAG,IAAA,gLAAc;IACxC,MAAM,YAAY,IAAA,8KAAY,EAAC;QAAE,MAAM,aAAa,IAAI;IAAC;IACzD,MAAM,aAAa,cAAc,aAAa,IAAI,EAAE;IAEpD,IAAI,CAAC,cAAc;QACjB,MAAM,IAAI,MAAM;IAClB;IAEA,MAAM,EAAE,EAAE,EAAE,GAAG;IAEf,OAAO;QACL;QACA,MAAM,aAAa,IAAI;QACvB,YAAY,GAAG,GAAG,UAAU,CAAC;QAC7B,mBAAmB,GAAG,GAAG,sBAAsB,CAAC;QAChD,eAAe,GAAG,GAAG,kBAAkB,CAAC;QACxC,GAAG,UAAU;IACf;AACF;AAMA,MAAM,gCAAkB,sNAAmB,CACzC,CAAC;AAGH,SAAS,SAAS,EAAE,SAAS,EAAE,GAAG,OAAoC;IACpE,MAAM,KAAK,8MAAW;IAEtB,qBACE,8OAAC,gBAAgB,QAAQ;QAAC,OAAO;YAAE;QAAG;kBACpC,cAAA,8OAAC;YACC,aAAU;YACV,WAAW,IAAA,kHAAE,EAAC,cAAc;YAC3B,GAAG,KAAK;;;;;;;;;;;AAIjB;AAEA,SAAS,UAAU,EACjB,SAAS,EACT,GAAG,OAC8C;IACjD,MAAM,EAAE,KAAK,EAAE,UAAU,EAAE,GAAG;IAE9B,qBACE,8OAAC,mIAAK;QACJ,aAAU;QACV,cAAY,CAAC,CAAC;QACd,WAAW,IAAA,kHAAE,EAAC,sCAAsC;QACpD,SAAS;QACR,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EAAE,GAAG,OAA0C;IAClE,MAAM,EAAE,KAAK,EAAE,UAAU,EAAE,iBAAiB,EAAE,aAAa,EAAE,GAAG;IAEhE,qBACE,8OAAC,wKAAI;QACH,aAAU;QACV,IAAI;QACJ,oBACE,CAAC,QACG,GAAG,mBAAmB,GACtB,GAAG,kBAAkB,CAAC,EAAE,eAAe;QAE7C,gBAAc,CAAC,CAAC;QACf,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,gBAAgB,EAAE,SAAS,EAAE,GAAG,OAAkC;IACzE,MAAM,EAAE,iBAAiB,EAAE,GAAG;IAE9B,qBACE,8OAAC;QACC,aAAU;QACV,IAAI;QACJ,WAAW,IAAA,kHAAE,EAAC,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAkC;IACrE,MAAM,EAAE,KAAK,EAAE,aAAa,EAAE,GAAG;IACjC,MAAM,OAAO,QAAQ,OAAO,OAAO,WAAW,MAAM,MAAM,QAAQ;IAElE,IAAI,CAAC,MAAM;QACT,OAAO;IACT;IAEA,qBACE,8OAAC;QACC,aAAU;QACV,IAAI;QACJ,WAAW,IAAA,kHAAE,EAAC,4BAA4B;QACzC,GAAG,KAAK;kBAER;;;;;;AAGP","debugId":null}},
    {"offset": {"line": 321, "column": 0}, "map": {"version":3,"sources":["file:///Users/nhungbui/Desktop/first-project/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Input({ className, type, ...props }: React.ComponentProps<\"input\">) {\n  return (\n    <input\n      type={type}\n      data-slot=\"input\"\n      className={cn(\n        \"file:text-foreground placeholder:text-muted-foreground selection:bg-primary selection:text-primary-foreground dark:bg-input/30 border-input h-9 w-full min-w-0 rounded-md border bg-transparent px-3 py-1 text-base shadow-xs transition-[color,box-shadow] outline-none file:inline-flex file:h-7 file:border-0 file:bg-transparent file:text-sm file:font-medium disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        \"focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px]\",\n        \"aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Input }\n"],"names":[],"mappings":";;;;;AAEA;;;AAEA,SAAS,MAAM,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAsC;IACzE,qBACE,8OAAC;QACC,MAAM;QACN,aAAU;QACV,WAAW,IAAA,kHAAE,EACX,8bACA,iFACA,0GACA;QAED,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 346, "column": 0}, "map": {"version":3,"sources":["file:///Users/nhungbui/Desktop/first-project/lib/actions/user.actions.ts"],"sourcesContent":["'use server';\n\nimport { signIn, signOut } from '@/auth';\nimport { signInFormSchema, signUpFormSchema } from '../constants/validator';\nimport { hashSync } from 'bcrypt-ts-edge';\nimport { prisma } from '@/db/prisma';\nimport { formatError } from '../utils';\nimport { ShippingAddress } from '@/types';\nimport { auth } from '@/auth';\nimport { shippingAddressSchema } from '../validators';\n\n\n// Sign in the user with credentials\nexport async function signInWithCredentials(\n  prevState: unknown,\n  formData: FormData\n) {\n  try {\n    const email = formData.get('email');\n    const password = formData.get('password');\n    \n    console.log(\"🔍 DEBUG: Form data received:\");\n    console.log(\"🔍 DEBUG: Email:\", email);\n    console.log(\"🔍 DEBUG: Password:\", password);\n\n    const user = signInFormSchema.parse({\n      email: email,\n      password: password,\n    });\n\n    console.log(\"🔍 DEBUG: Parsed user data:\", { email: user.email, password: user.password });\n\n    const callbackUrl = formData.get('callbackUrl') as string || '/';\n    console.log(\"🔍 DEBUG: Callback URL:\", callbackUrl);\n\n    await signIn('credentials', { ...user, callbackUrl });\n\n    return { success: true, message: 'Signed in successfully' };\n  } catch (error) {\n    console.log(\"❌ DEBUG: Error in signInWithCredentials:\", error);\n    if (error instanceof Error && error.message?.includes('NEXT_REDIRECT')) {\n      throw error;\n    }\n\n    return { success: false, message: 'Invalid email or password' };\n  }\n}\n\n// Register a new user\nexport async function signUp(prevState: unknown, formData: FormData) {\n  try {\n    const user = signUpFormSchema.parse({\n      name: formData.get('name'),\n      email: formData.get('email'),\n      confirmPassword: formData.get('confirmPassword'),\n      password: formData.get('password'),\n    });\n\n    const plainPassword = user.password;\n\n    user.password = hashSync(user.password, 10);\n\n    await prisma.user.create({\n      data: {\n        name: user.name,\n        email: user.email,\n        password: user.password,\n        role: 'USER',\n      },\n    });\n\n    await signIn('credentials', {\n      email: user.email,\n      password: plainPassword,\n    });\n\n    return { success: true, message: 'User created successfully' };\n  } catch (error) {\n    if (error instanceof Error && error.message?.includes('NEXT_REDIRECT')) {\n      throw error;\n    }\n\n    return {\n      success: false,\n      message: formatError(error),\n    };\n  }\n}\n\nexport async function signOutUser() {\n  await signOut({ redirectTo: '/' });\n}\n\nexport async function updateUserAddress(data: ShippingAddress) {\n  try {\n    const session = await auth();\n\n    const currentUser = await prisma.user.findFirst({\n      where: { id: session?.user?.id! },\n    });\n\n    if (!currentUser) throw new Error('User not found');\n\n    const address = shippingAddressSchema.parse(data);\n\n    await prisma.user.update({\n      where: { id: currentUser.id },\n      data: { address },\n    });\n\n    return {\n      success: true,\n      message: 'User updated successfully',\n    };\n  } catch (error) {\n    return { success: false, message: formatError(error) };\n  }\n}\n"],"names":[],"mappings":";;;;;;;IA6FsB,oBAAA,WAAA,GAAA,IAAA,+OAAA,EAAA,8CAAA,oOAAA,EAAA,KAAA,GAAA,0OAAA,EAAA","debugId":null}},
    {"offset": {"line": 358, "column": 0}, "map": {"version":3,"sources":["file:///Users/nhungbui/Desktop/first-project/app/%28root%29/shipping-address/shipping-address-form.tsx"],"sourcesContent":["'use client';\n\nimport { SubmitHandler, useForm } from 'react-hook-form';\nimport { ShippingAddress } from '@/types';\nimport { useRouter } from 'next/navigation';\nimport { z } from 'zod';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { shippingAddressSchema } from '@/lib/validators';\nimport { ControllerRenderProps } from 'react-hook-form';\nimport { shippingAddressDefaultValues } from '@/lib/constants';\nimport { useToast } from '@/hooks/use-toast';\nimport { useTransition } from 'react';    \nimport CheckoutSteps from '@/components/shared/checkout-steps';\n\nimport {\n  Form,\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from '@/components/ui/form';\nimport { Input } from '@/components/ui/input';\nimport { Button } from '@/components/ui/button';\nimport { ArrowRight, Loader } from 'lucide-react';\nimport { updateUserAddress } from '@/lib/actions/user.actions';\n\n\nconst ShippingAddressForm = ({\n  address,\n}: {\n  address: ShippingAddress | null;\n}) => {\n  const router = useRouter();\n  const { toast } = useToast();\n  const form = useForm<z.infer<typeof shippingAddressSchema>>({\n    resolver: zodResolver(shippingAddressSchema),\n    defaultValues: address || shippingAddressDefaultValues,\n  });\n  const [isPending, startTransition] = useTransition();\n\n  const onSubmit: SubmitHandler<z.infer<typeof shippingAddressSchema>> = async (\n    values\n  ) => {\n    startTransition(async () => {\n      const res = await updateUserAddress(values);\n  \n      if (!res.success) {\n        toast.error(res.message || \"Something went wrong!!!!\");\n        return;\n      }\n  \n      router.push('/payment-method');\n    });\n  };\n\n  return (\n    <>\n      {/* <CheckoutSteps current={1} /> */}\n      <div className='max-w-md mx-auto space-y-4'>\n        <Form {...form}>\n          <form\n            method='post'\n            onSubmit={form.handleSubmit(onSubmit)}\n            className='space-y-4'\n          >\n            <div className='flex flex-col gap-5 md:flex-row'>\n              <FormField\n                control={form.control}\n                name='fullName'\n                render={({\n                  field,\n                }: {\n                  field: ControllerRenderProps<\n                    z.infer<typeof shippingAddressSchema>,\n                    'fullName'\n                  >\n                }) => (\n                  <FormItem className='w-full'>\n                    <FormLabel>Full Name</FormLabel>\n                    <FormControl>\n                      <Input placeholder='Enter full name' {...field} />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n            </div>\n            <div>\n              <FormField\n                control={form.control}\n                name='streetAddress'\n                render={({\n                  field,\n                }: {\n                  field: ControllerRenderProps<\n                    z.infer<typeof shippingAddressSchema>,\n                    'streetAddress'\n                  >;\n                }) => (\n                  <FormItem className='w-full'>\n                    <FormLabel>Address</FormLabel>\n                    <FormControl>\n                      <Input placeholder='Enter address' {...field} />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n            </div>\n            <div className='flex flex-col gap-5 md:flex-row'>\n              <FormField\n                control={form.control}\n                name='city'\n                render={({\n                  field,\n                }: {\n                  field: ControllerRenderProps<\n                    z.infer<typeof shippingAddressSchema>,\n                    'city'\n                  >;\n                }) => (\n                  <FormItem className='w-full'>\n                    <FormLabel>City</FormLabel>\n                    <FormControl>\n                      <Input placeholder='Enter city' {...field} />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n              <FormField\n                control={form.control}\n                name='country'\n                render={({\n                  field,\n                }: {\n                  field: ControllerRenderProps<\n                    z.infer<typeof shippingAddressSchema>,\n                    'country'\n                  >;\n                }) => (\n                  <FormItem className='w-full'>\n                    <FormLabel>Country</FormLabel>\n                    <FormControl>\n                      <Input placeholder='Enter country' {...field} />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n              <FormField\n                control={form.control}\n                name='postalCode'\n                render={({\n                  field,\n                }: {\n                  field: ControllerRenderProps<\n                    z.infer<typeof shippingAddressSchema>,\n                    'postalCode'\n                  >;\n                }) => (\n                  <FormItem className='w-full'>\n                    <FormLabel>Postal Code</FormLabel>\n                    <FormControl>\n                      <Input placeholder='Enter postal code' {...field} />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n            </div>\n            <div className='flex gap-2'>\n              <Button type='submit' disabled={isPending}>\n                {isPending ? (\n                  <Loader className='animate-spin w-4 h-4' />\n                ) : (\n                  <ArrowRight className='w-4 h-4' />\n                )}\n                Continue\n              </Button>\n            </div>\n          </form>\n        </Form>\n      </div>\n    </>\n  );\n};\n\nexport default ShippingAddressForm;"],"names":[],"mappings":"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","debugId":null}}]
}